{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/@ionic/pwa-elements/dist/esm-es5 lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","data/memories-context.ts","components/MemoryItem.tsx","pages/GoodMemories.tsx","pages/BadMemories.tsx","pages/NewMemory.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","data/MemoriesContextProvider.tsx","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","MemoriesContext","React","createContext","memories","addMemory","initContext","MemoryType","props","memoriesCtx","useContext","containerStyle","width","height","filter","memory","type","length","className","src","base64Url","alt","title","mapContainerStyle","center","lat","lng","zoom","position","GoodMemories","isPlatform","slot","routerLink","icon","add","vertical","horizontal","MemoryItem","BadMemories","NewMemory","history","useHistory","useState","chosenMemoryType","setChosenMemoryType","titleRef","useRef","setLat","setLng","getCurrentPosition","a","Geolocation","enableHighAccuracy","coordinates","console","log","coords","latitude","longitude","useEffect","addMemoryHandler","enteredTitle","current","value","toString","trim","takenPhoto","fileName","Date","getTime","base64FromPath","preview","base64","Filesystem","writeFile","path","data","directory","Directory","Data","goBack","replace","setTakenPhoto","takePhotoHandler","photo","Camera","getPhoto","resultType","CameraResultType","Uri","source","CameraSource","quality","webPath","defaultHref","ref","onIonChange","event","selectedMemoryType","detail","fill","onClick","camera","justifyContent","latLng","App","googleMapsApiKey","exact","component","from","to","defaultValue","tab","href","happy","sad","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","MemoriesContextProvider","filesystem","setMemories","storableMemories","imagePath","Storage","set","key","JSON","stringify","useCallback","get","memoriesData","storedMemories","parse","loadedMemories","storedMemory","readFile","file","push","Provider","base64Data","newMemory","Math","random","curMemories","children","ReactDOM","render","StrictMode","document","getElementById","defineCustomElements","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"0HAAA,IAAIA,EAAM,CACT,8BAA+B,CAC9B,GACA,GAED,uBAAwB,CACvB,GACA,GAED,uBAAwB,CACvB,GACA,GAED,0BAA2B,CAC1B,GACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,sBAAuB,CACtB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mCAAoC,CACnC,IACA,IAED,uBAAwB,CACvB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B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","file":"static/js/main.cc553c0d.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t96,\n\t\t7\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t97,\n\t\t8\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t98,\n\t\t9\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t99,\n\t\t19\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t100,\n\t\t20\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t101,\n\t\t49\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t102,\n\t\t21\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t103,\n\t\t22\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t104,\n\t\t23\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t105,\n\t\t24\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t106,\n\t\t50\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t107,\n\t\t12\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t108,\n\t\t25\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t109,\n\t\t51\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t110,\n\t\t52\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t111,\n\t\t26\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t112,\n\t\t27\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t113,\n\t\t28\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t114,\n\t\t29\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t115,\n\t\t30\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t116,\n\t\t10\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t117,\n\t\t16\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t118,\n\t\t11\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t119,\n\t\t31\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t120,\n\t\t32\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t121,\n\t\t33\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t122,\n\t\t13\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t123,\n\t\t18\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t124,\n\t\t53\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t125,\n\t\t34\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t126,\n\t\t35\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t127,\n\t\t36\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t128,\n\t\t37\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t129,\n\t\t54\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t130,\n\t\t15\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t131,\n\t\t55\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t132,\n\t\t38\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t133,\n\t\t17\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t134,\n\t\t39\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t135,\n\t\t40\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t136,\n\t\t41\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t137,\n\t\t14\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t138,\n\t\t56\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 70;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t139,\n\t\t71\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 72;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./pwa-action-sheet.entry.js\": [\n\t\t144,\n\t\t63\n\t],\n\t\"./pwa-camera-modal-instance.entry.js\": [\n\t\t145,\n\t\t64\n\t],\n\t\"./pwa-camera-modal.entry.js\": [\n\t\t146,\n\t\t65\n\t],\n\t\"./pwa-camera.entry.js\": [\n\t\t147,\n\t\t66\n\t],\n\t\"./pwa-toast.entry.js\": [\n\t\t148,\n\t\t67\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 93;\nmodule.exports = webpackAsyncContext;","import React from \"react\";\r\n\r\nexport interface Memory {\r\n    id: string,\r\n    imagePath: string,\r\n    title: string,\r\n    type: 'good' | 'bad';\r\n    base64Url: string,\r\n    lat: any,\r\n    lng: any\r\n}\r\n\r\nconst MemoriesContext = React.createContext<{\r\n    memories: Memory[]\r\n    addMemory: (path: string, base64Data: string, title:string, type: 'good' | 'bad', lat:any, lng:any) => void\r\n    initContext: () => void\r\n}>({\r\n    memories: [],\r\n    addMemory: () => {},\r\n    initContext: () => {}\r\n})\r\n\r\nexport default MemoriesContext","import { IonRow, IonCol, IonCard, IonCardHeader, IonCardTitle, IonGrid } from \"@ionic/react\"\r\nimport React, { useContext } from \"react\"\r\nimport MemoriesContext from \"../data/memories-context\"\r\nimport {GoogleMap, InfoWindow, LoadScript, Marker} from '@react-google-maps/api'\r\nconst MemoryType: React.FC <{memory: any}> = props  => {\r\n    const memoriesCtx = useContext(MemoriesContext)\r\n    const containerStyle = {\r\n        width: '100%',\r\n        height: '140px'\r\n      }\r\n    const memories = memoriesCtx.memories.filter(memory => memory.type === props.memory)\r\n    return(\r\n\r\n       <IonGrid>\r\n                    {memories.length === 0 && (\r\n                        <IonRow>\r\n                            <IonCol className=\"ion-text-center\">\r\n                                <h2>No good memories found</h2>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    )}\r\n\r\n                    {memories.map(memory => (\r\n                        <IonRow key={memory.id}>\r\n                            {/* {memory.type}\r\n                            {memory.title} */}\r\n                            <IonCol>\r\n                                <IonCard>\r\n                                    {/* <img src={memory.imagePath} alt={memory.title} /> */}\r\n                                    <IonCardHeader>\r\n                                        <img src={memory.base64Url} alt={memory.title}/>\r\n                                        \r\n                                        <GoogleMap\r\n                                            mapContainerStyle={containerStyle}\r\n                                            center={{lat:memory.lat, lng:memory.lng}}\r\n                                            zoom={18}\r\n                                           \r\n                                            \r\n                                        >\r\n                                            <Marker position={{lat: memory.lat, lng: memory.lng}} />\r\n                                            <></>\r\n                                            {/* <InfoWindow position={{lat:lat,lng:lng}}>\r\n                                            <div>\r\n                                                <h1 style={{color:'black'}}>Kampus paling keren.</h1>\r\n                                            </div>\r\n                                            </InfoWindow> */}\r\n                                        </GoogleMap>\r\n                                        <IonCardTitle>{memory.title}</IonCardTitle>\r\n                                    </IonCardHeader>\r\n                                </IonCard>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    ))}\r\n                </IonGrid>\r\n    )\r\n}\r\n\r\nexport default MemoryType","import { IonButton, IonButtons, IonCard, IonCardHeader, IonCardTitle, IonCol, IonContent, IonFab, IonFabButton, IonGrid, IonHeader, IonIcon, IonPage, IonRow, IonTitle, IonToolbar, isPlatform } from \"@ionic/react\"\r\nimport { add } from \"ionicons/icons\"\r\nimport { useContext } from \"react\"\r\nimport MemoriesContext from \"../data/memories-context\"\r\nimport MemoryItem from '../components/MemoryItem'\r\nimport {GoogleMap, InfoWindow, LoadScript, Marker} from '@react-google-maps/api'\r\nconst GoodMemories: React.FC = () => {\r\n    const memoriesCtx = useContext(MemoriesContext)\r\n    const memories = memoriesCtx.memories.filter(memory => memory.type === 'good')\r\n    const containerStyle = {\r\n        width: '100%',\r\n        height: '140px'\r\n      }\r\n    return(\r\n        <IonPage>\r\n            <IonHeader>\r\n                <IonToolbar>\r\n                    <IonTitle>Good Memories</IonTitle>\r\n                    {isPlatform(\"ios\") && (\r\n                    <IonButtons slot=\"end\">\r\n                        <IonButton routerLink=\"/NewMemory\">\r\n                            <IonIcon icon={add} />\r\n                        </IonButton>\r\n                    </IonButtons>\r\n                    )}\r\n                </IonToolbar>\r\n            </IonHeader>\r\n\r\n            <IonContent>\r\n               \r\n                {!isPlatform(\"ios\") && (\r\n                    <IonFab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\r\n                    <IonFabButton routerLink=\"/NewMemory\">\r\n                        <IonIcon icon={add} />\r\n                    </IonFabButton>\r\n                    </IonFab>\r\n                )}\r\n\r\n                <MemoryItem memory={\"good\"} />\r\n\r\n                {/* {memories.map(memory => (\r\n                        <IonRow key={memory.id}>\r\n                            \r\n                            <IonCol>\r\n                                <IonCard>\r\n                                   \r\n                                    <IonCardHeader>\r\n                                        <img src={memory.base64Url} alt={memory.title}/>\r\n                                        \r\n                                        <div>\r\n                                        <GoogleMap\r\n                                            mapContainerStyle={containerStyle}\r\n                                            center={{lat:memory.lat, lng:memory.lng}}\r\n                                            zoom={18}\r\n                                           \r\n                                            \r\n                                        >\r\n                                            <Marker position={{lat: memory.lat, lng: memory.lng}} />\r\n                                            \r\n                                        </GoogleMap>\r\n                                        </div>\r\n                                        <IonCardTitle>{memory.title}</IonCardTitle>\r\n                                    </IonCardHeader>\r\n                                </IonCard>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    ))} */}\r\n\r\n                {/* <IonGrid>\r\n                    {goodMemories.length === 0 && (\r\n                        <IonRow>\r\n                            <IonCol className=\"ion-text-center\">\r\n                                <h2>No good memories found</h2>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    )}\r\n\r\n                    {goodMemories.map(memory => (\r\n                        <IonRow key={memory.id}>\r\n                            {memory.type}\r\n                            {memory.title}\r\n                            <IonCol>\r\n                                <IonCard>\r\n                                    <img src={memory.imagePath} alt={memory.title} />\r\n                                    <IonCardHeader>\r\n                                        <img src={memory.base64Url} alt={memory.title}/>\r\n                                        <IonCardTitle>{memory.title}</IonCardTitle>\r\n                                    </IonCardHeader>\r\n                                </IonCard>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    ))}\r\n                </IonGrid> */}\r\n            </IonContent>\r\n        </IonPage>\r\n    )\r\n}\r\n\r\nexport default GoodMemories","import { IonContent,isPlatform, IonHeader, IonPage, IonTitle, IonToolbar, IonFab, IonFabButton, IonIcon, IonButtons, IonButton, IonCard, IonCardHeader, IonCardTitle, IonCol, IonGrid, IonRow } from \"@ionic/react\"\r\nimport { add } from \"ionicons/icons\"\r\nimport { useContext } from \"react\"\r\nimport MemoriesContext from \"../data/memories-context\"\r\nimport MemoryItem from '../components/MemoryItem'\r\n\r\nconst BadMemories: React.FC = () => {\r\n    // const memoriesCtx = useContext(MemoriesContext)\r\n    // const badMemories = memoriesCtx.memories.filter(memory => memory.type === 'bad')\r\n    return(\r\n        <IonPage>\r\n            <IonHeader>\r\n                <IonToolbar>\r\n                    <IonTitle>Bad Memories</IonTitle>\r\n                    {isPlatform(\"ios\") && (\r\n                    <IonButtons slot=\"end\">\r\n                        <IonButton routerLink=\"/NewMemory\">\r\n                            <IonIcon icon={add} />\r\n                        </IonButton>\r\n                    </IonButtons>\r\n                    )}\r\n                </IonToolbar>\r\n            </IonHeader>\r\n\r\n            <IonContent>\r\n                \r\n                {!isPlatform(\"ios\") && (\r\n                    <IonFab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\r\n                    <IonFabButton routerLink=\"/NewMemory\">\r\n                        <IonIcon icon={add} />\r\n                    </IonFabButton>\r\n                    </IonFab>\r\n                )}\r\n\r\n                <MemoryItem memory={\"bad\"} />\r\n            </IonContent>\r\n        </IonPage>\r\n    )\r\n}\r\n\r\nexport default BadMemories","import { IonBackButton, IonButton, IonButtons, IonCol, IonContent, IonIcon, IonInput, IonItem, IonLabel, IonPage, IonRow, IonSelect, IonSelectOption, IonTitle, IonToolbar } from \"@ionic/react\"\r\nimport { camera } from \"ionicons/icons\"\r\nimport {Camera, CameraResultType, CameraSource} from '@capacitor/camera'\r\nimport './NewMemory.css'\r\nimport {Geolocation} from '@capacitor/geolocation'\r\nimport { useState,useRef, useContext, useEffect } from \"react\"\r\nimport {Directory, Filesystem} from \"@capacitor/filesystem\";\r\nimport {GoogleMap, InfoWindow, LoadScript, Marker} from '@react-google-maps/api'\r\nimport {base64FromPath} from \"@ionic/react-hooks/filesystem\"\r\nimport MemoriesContext from \"../data/memories-context\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nconst NewMemory: React.FC = () => {\r\n    const memoriesCtx = useContext(MemoriesContext)\r\n    const history = useHistory()\r\n    const [chosenMemoryType, setChosenMemoryType] = useState<'good' | 'bad'>('good')\r\n    const titleRef = useRef<HTMLIonInputElement>(null)\r\n    const[lat, setLat] = useState(-6.257377926995551)\r\n    const[lng, setLng] = useState(106.61829861017398)\r\n    \r\n    const getCurrentPosition = async() => {\r\n        const coordinates = await Geolocation.getCurrentPosition({enableHighAccuracy: true})\r\n        \r\n        console.log('Current position: ', coordinates)\r\n        console.log('Lat: ', coordinates.coords.latitude)\r\n        console.log('Lng:',coordinates.coords.longitude)\r\n        setLat(coordinates.coords.latitude)\r\n        setLng(coordinates.coords.longitude)\r\n    }\r\n    useEffect(() => {\r\n        getCurrentPosition()\r\n        \r\n       \r\n    }, [])\r\n\r\n    const selectPos = (e: google.maps.MapMouseEvent) => {\r\n        if(e.latLng?.lat()){\r\n          setLat(e.latLng?.lat())\r\n        }\r\n        if(e.latLng?.lng()){\r\n          setLng(e.latLng?.lng())\r\n        }\r\n      }\r\n      const containerStyle = {\r\n        width: '100%',\r\n        height: '40%',\r\n        justifyContent: 'center',\r\n       \r\n      }\r\n   \r\n    const selectMemoryTypeHandler = (event: CustomEvent) => {\r\n        const selectedMemoryType = event.detail.value\r\n        setChosenMemoryType(selectedMemoryType)\r\n    }\r\n\r\n    const addMemoryHandler = async() => {\r\n        const enteredTitle = titleRef.current?.value;\r\n        if(!enteredTitle || enteredTitle.toString().trim().length === 0 || !takenPhoto || !chosenMemoryType){\r\n            return\r\n        }\r\n        const fileName = new Date().getTime() + '.jpeg';\r\n        const base64 = await base64FromPath(takenPhoto!.preview)\r\n        await Filesystem.writeFile({\r\n            path: fileName,\r\n            data: base64,\r\n            directory: Directory.Data\r\n        })\r\n\r\n        memoriesCtx.addMemory(fileName, base64, enteredTitle.toString(), chosenMemoryType,lat,lng)\r\n        history.length > 0 ? history.goBack() : history.replace('/goodmemories')\r\n\r\n    }\r\n    const [takenPhoto, setTakenPhoto] = useState<{\r\n        path: any\r\n        preview: any\r\n    }>()\r\n\r\n    const takePhotoHandler = async() => {\r\n        const photo = Camera.getPhoto({\r\n            resultType: CameraResultType.Uri,\r\n            source: CameraSource.Camera,\r\n            quality: 80,\r\n            width: 500\r\n        })\r\n        console.log(photo)\r\n\r\n        if(!photo || /*!(await photo).path*/  !(await photo).webPath){\r\n            return;\r\n        }\r\n\r\n        setTakenPhoto({\r\n            path: (await photo).path,\r\n            preview: (await photo).webPath\r\n        })\r\n    }\r\n    return(\r\n        <IonPage>\r\n            <IonToolbar>\r\n                <IonButtons slot=\"start\">\r\n                    <IonBackButton defaultHref=\"/\" />\r\n                </IonButtons>\r\n                <IonTitle>New Memory</IonTitle>\r\n            </IonToolbar>\r\n\r\n               \r\n\r\n            <IonContent >\r\n                <IonRow className=\"ion-margin-top border\">\r\n                    <IonCol>\r\n                        <IonItem>\r\n                            <IonLabel position=\"floating\">Input Title</IonLabel>\r\n                            <IonInput type=\"text\" ref={titleRef}></IonInput>\r\n                        </IonItem>\r\n                    </IonCol>\r\n                </IonRow>\r\n\r\n                <IonRow>\r\n                    <IonCol className=\"ion-text-left\">\r\n                        <IonSelect onIonChange={selectMemoryTypeHandler} value={chosenMemoryType}>\r\n                            <IonSelectOption value=\"good\">Good Memory</IonSelectOption>\r\n                            <IonSelectOption value=\"bad\">Bad Memory</IonSelectOption>\r\n                        </IonSelect>\r\n                    </IonCol>\r\n                </IonRow>\r\n                <IonRow className=\"ion-text-center\">\r\n                    <IonCol >\r\n                        <div className=\"image-preview-wrapper\">\r\n                            <div className=\"image-preview\">\r\n                                {!takenPhoto && <h3>No photo chosen.</h3>}\r\n                                {takenPhoto && <img src={takenPhoto.preview} alt=\"Preview\" />}\r\n                            </div>\r\n                        </div>\r\n                        <IonButton fill=\"clear\" onClick={takePhotoHandler}>\r\n                            <IonIcon slot=\"start\" icon={camera}/>\r\n                            <IonLabel>Take Photo</IonLabel>\r\n                        </IonButton>\r\n                    </IonCol>\r\n                </IonRow>\r\n\r\n              \r\n                  \r\n                        \r\n                        <GoogleMap\r\n                            mapContainerStyle={containerStyle}\r\n                            center={{lat:lat, lng:lng}}\r\n                            zoom={18}\r\n                            onClick={selectPos}\r\n                            \r\n                        >\r\n                            <Marker position={{lat: lat, lng: lng}} />\r\n                            <></>\r\n                            {/* <InfoWindow position={{lat:lat,lng:lng}}>\r\n                            <div>\r\n                                <h1 style={{color:'black'}}>Kampus paling keren.</h1>\r\n                            </div>\r\n                            </InfoWindow> */}\r\n                        </GoogleMap>\r\n                       \r\n                   \r\n               \r\n                <IonRow className=\"ion-margin-top\">\r\n                    <IonCol className=\"ion-text-center\">\r\n                        <IonButton onClick={addMemoryHandler}>Add Memory</IonButton>\r\n                    </IonCol>\r\n                </IonRow>\r\n            </IonContent>\r\n        </IonPage>\r\n    )\r\n}\r\n\r\nexport default NewMemory","import { Redirect, Route } from 'react-router-dom';\nimport { IonApp, IonIcon, IonLabel, IonRouterOutlet, IonTabBar, IonTabButton, IonTabs } from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport {happy, sad} from 'ionicons/icons'\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\nimport GoodMemories from './pages/GoodMemories';\nimport BadMemories from './pages/BadMemories';\nimport NewMemory from './pages/NewMemory';\nimport MemoriesContextProvider from './data/MemoriesContextProvider';\nimport { useContext, useEffect } from 'react';\nimport MemoriesContext from './data/memories-context';\nimport {GoogleMap, InfoWindow, LoadScript, Marker} from '@react-google-maps/api'\n\nconst App: React.FC = () => {\n  const memoriesCtx = useContext(MemoriesContext)\n  const {initContext} = memoriesCtx\n\n  useEffect(() => {\n    initContext()\n  }, [initContext])\nreturn(\n  <IonApp>\n    <h2>This works!</h2>\n\n    <IonReactRouter>\n    <LoadScript googleMapsApiKey=\"AIzaSyB9liAgEJWuL6TC9aUWj76xG09M8-t6kOw\">\n        <IonTabs>\n            <IonRouterOutlet id=\"main\">\n              <Route exact path=\"/goodmemories\" component={GoodMemories} />\n              <Route exact path=\"/badMemories\" component={BadMemories} />\n              <Route exact path=\"/newMemory\" component={NewMemory} />\n            \n              \n              <Redirect exact from=\"/\" to= \"/goodMemories\" />\n            </IonRouterOutlet>\n          \n\n        <IonTabBar slot=\"bottom\" defaultValue=\"Good Memories\">\n          <IonTabButton tab=\"Good Memories\" href=\"/goodmemories\">\n            <IonIcon icon={happy} />\n            <IonLabel>Good Memories</IonLabel>\n          </IonTabButton>\n          <IonTabButton tab=\"Bad Memories\" href=\"/badMemories\">\n            <IonIcon icon={sad} />\n            <IonLabel>Bad Memories</IonLabel>\n          </IonTabButton>\n        </IonTabBar>\n        </IonTabs>\n    {/* </MemoriesContextProvider> */}\n    </LoadScript>\n    </IonReactRouter>\n  </IonApp>\n);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {useState, useEffect,useCallback} from 'react'\r\nimport {Storage} from '@capacitor/storage'\r\nimport MemoriesContext, {Memory} from './memories-context'\r\nimport { Directory, Filesystem } from '@capacitor/filesystem'\r\n\r\nconst MemoriesContextProvider: React.FC = props => {\r\n    \r\n    const filesystem = Filesystem\r\n    const [memories, setMemories] = useState<Memory[]>([])\r\n\r\n    useEffect(() => {\r\n        \r\n       const storableMemories = memories.map(memory => {\r\n           return {\r\n               id: memory.id,\r\n               title: memory.title,\r\n               imagePath: memory.imagePath,\r\n               type: memory.type,\r\n               lat: memory.lat,\r\n               lng: memory.lng\r\n           }\r\n       })\r\n       \r\n       Storage.set({key: 'memories',value: JSON.stringify(storableMemories)})\r\n    }, [memories])\r\n\r\n    const initContext = useCallback(async() => {\r\n        const memoriesData = await Storage.get({key: 'memories'})\r\n        const storedMemories = memoriesData.value ? JSON.parse(memoriesData.value) : []\r\n        const loadedMemories: Memory[] = []\r\n\r\n        for(const storedMemory of storedMemories){\r\n            const file = await filesystem.readFile({\r\n                path: storedMemory.imagePath,\r\n                directory: Directory.Data\r\n            })\r\n            loadedMemories.push({\r\n                id: storedMemory.id,\r\n                title: storedMemory.title,\r\n                type: storedMemory.type,\r\n                imagePath: storedMemory.imagePath,\r\n                base64Url: 'data:image/jpeg;base64,'+file.data,\r\n                lat: storedMemory.lat,\r\n                lng: storedMemory.lng\r\n            })\r\n        }\r\n        setMemories(loadedMemories)\r\n    },[])\r\n\r\n    \r\n    const addMemory = (path: string, base64Data:string, title: string, type: 'good'|'bad', lat:any, lng:any) => {\r\n        const newMemory: Memory = {\r\n            id: Math.random().toString(),\r\n            title,\r\n            type,\r\n            imagePath: path,\r\n            base64Url: base64Data,\r\n            lat,\r\n            lng\r\n        }\r\n        console.log(lat)\r\n        console.log(lng)\r\n        setMemories(curMemories => {\r\n            return [...curMemories, newMemory]\r\n        })\r\n    }\r\n    return(\r\n        <MemoriesContext.Provider value={{memories, addMemory,initContext}}>\r\n            {props.children}\r\n        </MemoriesContext.Provider>\r\n    )\r\n}\r\n\r\nexport default MemoriesContextProvider","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { defineCustomElements } from '@ionic/pwa-elements/loader';\nimport MemoriesContextProvider from './data/MemoriesContextProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MemoriesContextProvider>\n    <App />\n    </MemoriesContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\ndefineCustomElements(window);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}